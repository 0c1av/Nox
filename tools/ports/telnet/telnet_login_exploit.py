import telnetlib
import socket

def run(target, port, username, password, timeout=5):
	result = {
		"success": False,
		"error": None,
		#"banner": None,
		"post_login_prompt": None
	}

	try:
		# Connect to Telnet server
		tn = telnetlib.Telnet(target, port, timeout=timeout)

		# Read the banner (if any)
		banner = tn.read_until(b"login:", timeout=timeout).decode("utf-8", errors="ignore")
		#result["banner"] = banner.strip()

		# Send username
		tn.write(username.encode('ascii') + b"\n")

		# Wait for password prompt
		pw_prompt = tn.read_until(b"Password:", timeout=timeout).decode("utf-8", errors="ignore")

		# Send password
		tn.write(password.encode('ascii') + b"\n")

		# Wait for post-login shell or rejection
		post_login = tn.read_until(b"$", timeout=timeout)  # Looks for a shell prompt
		decoded = post_login.decode("utf-8", errors="ignore")

		# Success detection (primitive but effective)
		if any(x in decoded.lower() for x in ["last login", "welcome", "$", "#", "you have mail"]):
			result["success"] = True
			result["post_login_prompt"] = decoded.strip()
		else:
			result["error"] = "Login failed or no prompt detected."

		tn.close()

	except socket.timeout:
		result["error"] = "Connection timed out"
	except ConnectionRefusedError:
		result["error"] = "Connection refused"
	except EOFError:
		result["error"] = "Connection closed by remote host"
	except Exception as e:
		result["error"] = f"{type(e).__name__}: {str(e)}"

	return result
