from ftplib import FTP, error_perm, all_errors
import os


def run(target, port, username=None, password=None):
	result = {
		"success": False,
		"banner": None,
		"files": [],
		"writable": False,
		"uploaded_file": None,
		"error": None
	}

	try:
		ftp = FTP()
		ftp.connect(target, port, timeout=10)
		result["banner"] = ftp.getwelcome()

		# Use anonymous login if no credentials are provided
		if username is None and password is None:
			ftp.login()
		else:
			ftp.login(username, password)

		# List files
		try:
			result["files"] = ftp.nlst()
		except error_perm:
			result["files"] = []

		# Try uploading a file to test writability
		try:
			with open("ftp_test.txt", "w") as f:
				f.write("FTP exploit test file.")

			with open("ftp_test.txt", "rb") as f:
				ftp.storbinary("STOR ftp_test.txt", f)

			result["writable"] = True
			result["uploaded_file"] = "ftp_test.txt"

			try:
				ftp.delete("ftp_test.txt")
			except:
				pass

		except all_errors:
			result["writable"] = False


		ftp.quit()
		result["success"] = True

	except all_errors as e:
		result["error"] = str(e)

	finally:
		if os.path.exists("ftp_test.txt"):
			os.remove("ftp_test.txt")
	return result
